/*
 * generated by Xtext
 */
grammar InternalRdsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.RdslGrammarAccess;

}

@parser::members {

 	private RdslGrammarAccess grammarAccess;
 	
    public InternalRdslParser(TokenStream input, RdslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected RdslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getGraphsGraphParserRuleCall_0_0()); 
	    }
		lv_graphs_0_0=ruleGraph		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"graphs",
        		lv_graphs_0_0, 
        		"org.xtext.Rdsl.Graph");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getInstancesInstanceParserRuleCall_1_0()); 
	    }
		lv_instances_1_0=ruleInstance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"instances",
        		lv_instances_1_0, 
        		"org.xtext.Rdsl.Instance");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleGraph
entryRuleGraph returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGraphRule()); }
	 iv_ruleGraph=ruleGraph 
	 { $current=$iv_ruleGraph.current; } 
	 EOF 
;

// Rule Graph
ruleGraph returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getGraphAccess().getImportsImportParserRuleCall_0_0()); 
	    }
		lv_imports_0_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGraphRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_0_0, 
        		"org.xtext.Rdsl.Import");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getGraphAccess().getComponentsComponentParserRuleCall_1_0()); 
	    }
		lv_components_1_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGraphRule());
	        }
       		add(
       			$current, 
       			"components",
        		lv_components_1_0, 
        		"org.xtext.Rdsl.Component");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getGraphAccess().getFacetGraphsFacetParserRuleCall_2_0()); 
	    }
		lv_facetGraphs_2_0=ruleFacet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGraphRule());
	        }
       		add(
       			$current, 
       			"facetGraphs",
        		lv_facetGraphs_2_0, 
        		"org.xtext.Rdsl.Facet");
	        afterParserOrEnumRuleCall();
	    }

)
))+
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportURIImpotUriParserRuleCall_1_0_0()); 
	    }
		lv_importURI_1_1=ruleImpotUri		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importURI",
        		lv_importURI_1_1, 
        		"org.xtext.Rdsl.ImpotUri");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportURIURLParserRuleCall_1_0_1()); 
	    }
		lv_importURI_1_2=ruleURL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importURI",
        		lv_importURI_1_2, 
        		"org.xtext.Rdsl.URL");
	        afterParserOrEnumRuleCall();
	    }

)

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImportAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleURL
entryRuleURL returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getURLRule()); }
	 iv_ruleURL=ruleURL 
	 { $current=$iv_ruleURL.current; } 
	 EOF 
;

// Rule URL
ruleURL returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='https://' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getURLAccess().getHttpsKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getURLAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getURLRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getURLAccess().getFullStopKeyword_2());
    }
(
(
(
		lv_domaine_3_1=	'com' 
    {
        newLeafNode(lv_domaine_3_1, grammarAccess.getURLAccess().getDomaineComKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getURLRule());
	        }
       		setWithLastConsumed($current, "domaine", lv_domaine_3_1, null);
	    }

    |		lv_domaine_3_2=	'org' 
    {
        newLeafNode(lv_domaine_3_2, grammarAccess.getURLAccess().getDomaineOrgKeyword_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getURLRule());
	        }
       		setWithLastConsumed($current, "domaine", lv_domaine_3_2, null);
	    }

    |		lv_domaine_3_3=	'fr' 
    {
        newLeafNode(lv_domaine_3_3, grammarAccess.getURLAccess().getDomaineFrKeyword_3_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getURLRule());
	        }
       		setWithLastConsumed($current, "domaine", lv_domaine_3_3, null);
	    }

    |		lv_domaine_3_4=	'net' 
    {
        newLeafNode(lv_domaine_3_4, grammarAccess.getURLAccess().getDomaineNetKeyword_3_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getURLRule());
	        }
       		setWithLastConsumed($current, "domaine", lv_domaine_3_4, null);
	    }

)

)
)(	otherlv_4='/' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getURLAccess().getSolidusKeyword_4_0());
    }
(
(
		lv_variable_5_0=RULE_ID
		{
			newLeafNode(lv_variable_5_0, grammarAccess.getURLAccess().getVariableIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getURLRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variable",
        		lv_variable_5_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
))*(	otherlv_6='/' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getURLAccess().getSolidusKeyword_5_0());
    }
(
(
		lv_variables_7_0=RULE_ID
		{
			newLeafNode(lv_variables_7_0, grammarAccess.getURLAccess().getVariablesIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getURLRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"variables",
        		lv_variables_7_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
)(
(
		lv_wildcard_8_0=	'*' 
    {
        newLeafNode(lv_wildcard_8_0, grammarAccess.getURLAccess().getWildcardAsteriskKeyword_5_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getURLRule());
	        }
       		setWithLastConsumed($current, "wildcard", true, "*");
	    }

)
))?)
;





// Entry rule entryRuleImpotUri
entryRuleImpotUri returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImpotUriRule()); }
	 iv_ruleImpotUri=ruleImpotUri 
	 { $current=$iv_ruleImpotUri.current; } 
	 EOF 
;

// Rule ImpotUri
ruleImpotUri returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getImpotUriAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImpotUriRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
)	otherlv_1='.graph' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImpotUriAccess().getGraphKeyword_1());
    }
)
;







// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	 iv_ruleComponent=ruleComponent 
	 { $current=$iv_ruleComponent.current; } 
	 EOF 
;

// Rule Component
ruleComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getInstallersInstallerParserRuleCall_2_0()); 
	    }
		lv_installers_2_0=ruleInstaller		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		set(
       			$current, 
       			"installers",
        		lv_installers_2_0, 
        		"org.xtext.Rdsl.Installer");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getChildrensChildrenParserRuleCall_3_0_0()); 
	    }
		lv_childrens_3_0=ruleChildren		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		add(
       			$current, 
       			"childrens",
        		lv_childrens_3_0, 
        		"org.xtext.Rdsl.Children");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getExportsExportParserRuleCall_3_1_0()); 
	    }
		lv_exports_4_0=ruleExport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		add(
       			$current, 
       			"exports",
        		lv_exports_4_0, 
        		"org.xtext.Rdsl.Export");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getImportsImportsParserRuleCall_3_2_0()); 
	    }
		lv_imports_5_0=ruleImports		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_5_0, 
        		"org.xtext.Rdsl.Imports");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getFacetsFacetsParserRuleCall_3_3_0()); 
	    }
		lv_facets_6_0=ruleFacets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		add(
       			$current, 
       			"facets",
        		lv_facets_6_0, 
        		"org.xtext.Rdsl.Facets");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getExtendsExtendsParserRuleCall_3_4_0()); 
	    }
		lv_extends_7_0=ruleExtends		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		add(
       			$current, 
       			"extends",
        		lv_extends_7_0, 
        		"org.xtext.Rdsl.Extends");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_4());
    }
(	otherlv_9='minAllowedInstances' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getComponentAccess().getMinAllowedInstancesKeyword_5_0());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getComponentAccess().getColonKeyword_5_1());
    }
(
(
		lv_valmin_11_0=RULE_INT
		{
			newLeafNode(lv_valmin_11_0, grammarAccess.getComponentAccess().getValminINTTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valmin",
        		lv_valmin_11_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_12=';' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getComponentAccess().getSemicolonKeyword_5_3());
    }
)?(	otherlv_13='maxAllowedInstances' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getComponentAccess().getMaxAllowedInstancesKeyword_6_0());
    }
	otherlv_14=':' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getComponentAccess().getColonKeyword_6_1());
    }
(
(
		lv_valmax_15_0=RULE_INT
		{
			newLeafNode(lv_valmax_15_0, grammarAccess.getComponentAccess().getValmaxINTTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valmax",
        		lv_valmax_15_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_16=';' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getComponentAccess().getSemicolonKeyword_6_3());
    }
)?)
;





// Entry rule entryRuleInstaller
entryRuleInstaller returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstallerRule()); }
	 iv_ruleInstaller=ruleInstaller 
	 { $current=$iv_ruleInstaller.current; } 
	 EOF 
;

// Rule Installer
ruleInstaller returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='installer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstallerAccess().getInstallerKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstallerAccess().getColonKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getInstallerAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstallerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstallerAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleExtends
entryRuleExtends returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtendsRule()); }
	 iv_ruleExtends=ruleExtends 
	 { $current=$iv_ruleExtends.current; } 
	 EOF 
;

// Rule Extends
ruleExtends returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExtendsAccess().getExtendsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExtendsAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtendsRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getExtendsAccess().getSupComponentComponentCrossReference_2_0()); 
	}

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExtendsAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleChildren
entryRuleChildren returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChildrenRule()); }
	 iv_ruleChildren=ruleChildren 
	 { $current=$iv_ruleChildren.current; } 
	 EOF 
;

// Rule Children
ruleChildren returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='children' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChildrenAccess().getChildrenKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getChildrenAccess().getColonKeyword_1());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChildrenRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getChildrenAccess().getChildrenComponentCrossReference_2_0_0()); 
	}

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getChildrenAccess().getCommaKeyword_2_1());
    }
)*(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChildrenRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getChildrenAccess().getChildComponentCrossReference_3_0()); 
	}

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getChildrenAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleExport
entryRuleExport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExportRule()); }
	 iv_ruleExport=ruleExport 
	 { $current=$iv_ruleExport.current; } 
	 EOF 
;

// Rule Export
ruleExport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='exports' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExportAccess().getExportsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExportAccess().getColonKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getExportAccess().getExportsExportVariableParserRuleCall_2_0_0()); 
	    }
		lv_exports_2_0=ruleexportVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExportRule());
	        }
       		add(
       			$current, 
       			"exports",
        		lv_exports_2_0, 
        		"org.xtext.Rdsl.exportVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExportAccess().getCommaKeyword_2_1());
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getExportAccess().getExportExportVariableParserRuleCall_3_0()); 
	    }
		lv_export_4_0=ruleexportVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExportRule());
	        }
       		set(
       			$current, 
       			"export",
        		lv_export_4_0, 
        		"org.xtext.Rdsl.exportVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExportAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleexportVariable
entryRuleexportVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExportVariableRule()); }
	 iv_ruleexportVariable=ruleexportVariable 
	 { $current=$iv_ruleexportVariable.current; } 
	 EOF 
;

// Rule exportVariable
ruleexportVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getExportVariableAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExportVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExportVariableAccess().getInitialInitialisationParserRuleCall_1_0()); 
	    }
		lv_initial_1_0=ruleInitialisation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExportVariableRule());
	        }
       		set(
       			$current, 
       			"initial",
        		lv_initial_1_0, 
        		"org.xtext.Rdsl.Initialisation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleInitialisation
entryRuleInitialisation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitialisationRule()); }
	 iv_ruleInitialisation=ruleInitialisation 
	 { $current=$iv_ruleInitialisation.current; } 
	 EOF 
;

// Rule Initialisation
ruleInitialisation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInitialisationAccess().getEqualsSignKeyword_0());
    }
(
(
		lv_val_1_0=RULE_INT
		{
			newLeafNode(lv_val_1_0, grammarAccess.getInitialisationAccess().getValINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitialisationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_1_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))
;





// Entry rule entryRuleImports
entryRuleImports returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportsRule()); }
	 iv_ruleImports=ruleImports 
	 { $current=$iv_ruleImports.current; } 
	 EOF 
;

// Rule Imports
ruleImports returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='imports' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportsAccess().getImportsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImportsAccess().getColonKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getImportsAccess().getImportsImportVariableParserRuleCall_2_0_0()); 
	    }
		lv_imports_2_0=ruleimportVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportsRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_2_0, 
        		"org.xtext.Rdsl.importVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getImportsAccess().getCommaKeyword_2_1());
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getImportsAccess().getImportedImportVariableParserRuleCall_3_0()); 
	    }
		lv_imported_4_0=ruleimportVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportsRule());
	        }
       		set(
       			$current, 
       			"imported",
        		lv_imported_4_0, 
        		"org.xtext.Rdsl.importVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getImportsAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleimportVariable
entryRuleimportVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportVariableRule()); }
	 iv_ruleimportVariable=ruleimportVariable 
	 { $current=$iv_ruleimportVariable.current; } 
	 EOF 
;

// Rule importVariable
ruleimportVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_external_0_0=	'external' 
    {
        newLeafNode(lv_external_0_0, grammarAccess.getImportVariableAccess().getExternalExternalKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportVariableRule());
	        }
       		setWithLastConsumed($current, "external", true, "external");
	    }

)
)?(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportVariableRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getImportVariableAccess().getImportvariableCompFacetCrossReference_1_0_0_0()); 
	}

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImportVariableAccess().getFullStopKeyword_1_0_1());
    }
((
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getImportVariableAccess().getNameIDTerminalRuleCall_1_0_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
)
    |	otherlv_4='*' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getImportVariableAccess().getAsteriskKeyword_1_0_2_1());
    }
))
    |(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getImportVariableAccess().getNameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
))(
(
		lv_optional_6_0=	'(optional)' 
    {
        newLeafNode(lv_optional_6_0, grammarAccess.getImportVariableAccess().getOptionalOptionalKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportVariableRule());
	        }
       		setWithLastConsumed($current, "optional", true, "(optional)");
	    }

)
)?)
;





// Entry rule entryRuleFacets
entryRuleFacets returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFacetsRule()); }
	 iv_ruleFacets=ruleFacets 
	 { $current=$iv_ruleFacets.current; } 
	 EOF 
;

// Rule Facets
ruleFacets returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='facets' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFacetsAccess().getFacetsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFacetsAccess().getColonKeyword_1());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetsRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getFacetsAccess().getFacetsFacetCrossReference_2_0_0()); 
	}

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFacetsAccess().getCommaKeyword_2_1());
    }
)*(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetsRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getFacetsAccess().getFacetFacetCrossReference_3_0()); 
	}

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFacetsAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleFacet
entryRuleFacet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFacetRule()); }
	 iv_ruleFacet=ruleFacet 
	 { $current=$iv_ruleFacet.current; } 
	 EOF 
;

// Rule Facet
ruleFacet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='facet' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFacetAccess().getFacetKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFacetAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFacetAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFacetAccess().getExportFacetExportParserRuleCall_3_0()); 
	    }
		lv_exportFacet_3_0=ruleExport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetRule());
	        }
       		add(
       			$current, 
       			"exportFacet",
        		lv_exportFacet_3_0, 
        		"org.xtext.Rdsl.Export");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getFacetAccess().getChildrenFacetChildrenParserRuleCall_4_0()); 
	    }
		lv_childrenFacet_4_0=ruleChildren		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetRule());
	        }
       		set(
       			$current, 
       			"childrenFacet",
        		lv_childrenFacet_4_0, 
        		"org.xtext.Rdsl.Children");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_5='extends' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFacetAccess().getExtendsKeyword_5_0());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFacetAccess().getColonKeyword_5_1());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getFacetAccess().getSupFacetsFacetCrossReference_5_2_0_0()); 
	}

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFacetAccess().getCommaKeyword_5_2_1());
    }
)*(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getFacetAccess().getSupFacetFacetCrossReference_5_3_0()); 
	}

)
))?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFacetAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleInstance
entryRuleInstance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceRule()); }
	 iv_ruleInstance=ruleInstance 
	 { $current=$iv_ruleInstance.current; } 
	 EOF 
;

// Rule Instance
ruleInstance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='instance' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstanceAccess().getInstanceKeyword_0());
    }
	otherlv_1='of' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstanceAccess().getOfKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getInstanceAccess().getComponentComponentCrossReference_2_0()); 
	}

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='name' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstanceAccess().getNameKeyword_4());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstanceAccess().getColonKeyword_5());
    }
(
(
		lv_name_6_0=RULE_ID
		{
			newLeafNode(lv_name_6_0, grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_6_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getFullnameFullnameParserRuleCall_7_0()); 
	    }
		lv_fullname_7_0=ruleFullname		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceRule());
	        }
       		add(
       			$current, 
       			"fullname",
        		lv_fullname_7_0, 
        		"org.xtext.Rdsl.Fullname");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInstanceAccess().getSemicolonKeyword_8());
    }
((
(
		lv_count_9_0=	'count' 
    {
        newLeafNode(lv_count_9_0, grammarAccess.getInstanceAccess().getCountCountKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed($current, "count", lv_count_9_0, "count");
	    }

)
)	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInstanceAccess().getColonKeyword_9_1());
    }
(
(
		lv_val_11_0=RULE_INT
		{
			newLeafNode(lv_val_11_0, grammarAccess.getInstanceAccess().getValINTTerminalRuleCall_9_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_11_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_12=';' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getInstanceAccess().getSemicolonKeyword_9_3());
    }
)?(	otherlv_13='minAllowedSubInstances' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInstanceAccess().getMinAllowedSubInstancesKeyword_10_0());
    }
	otherlv_14=':' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInstanceAccess().getColonKeyword_10_1());
    }
(
(
		lv_valmin_15_0=RULE_INT
		{
			newLeafNode(lv_valmin_15_0, grammarAccess.getInstanceAccess().getValminINTTerminalRuleCall_10_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valmin",
        		lv_valmin_15_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_16=';' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getInstanceAccess().getSemicolonKeyword_10_3());
    }
)?(	otherlv_17='maxAllowedSubInstances' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getInstanceAccess().getMaxAllowedSubInstancesKeyword_11_0());
    }
	otherlv_18=':' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getInstanceAccess().getColonKeyword_11_1());
    }
(
(
		lv_valmax_19_0=RULE_INT
		{
			newLeafNode(lv_valmax_19_0, grammarAccess.getInstanceAccess().getValmaxINTTerminalRuleCall_11_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valmax",
        		lv_valmax_19_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_20=';' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getInstanceAccess().getSemicolonKeyword_11_3());
    }
)?(	otherlv_21='adressType' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getInstanceAccess().getAdressTypeKeyword_12_0());
    }
	otherlv_22=':' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getInstanceAccess().getColonKeyword_12_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getIpAddressATypeParserRuleCall_12_2_0()); 
	    }
		lv_ipAddress_23_0=ruleAType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceRule());
	        }
       		set(
       			$current, 
       			"ipAddress",
        		lv_ipAddress_23_0, 
        		"org.xtext.Rdsl.AType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_24=';' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getInstanceAccess().getSemicolonKeyword_12_3());
    }
	otherlv_25='address' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getInstanceAccess().getAddressKeyword_12_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getIpadressIpAdressParserRuleCall_12_5_0()); 
	    }
		lv_ipadress_26_0=ruleIpAdress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceRule());
	        }
       		set(
       			$current, 
       			"ipadress",
        		lv_ipadress_26_0, 
        		"org.xtext.Rdsl.IpAdress");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_27=';' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getInstanceAccess().getSemicolonKeyword_12_6());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getTheLoadLoadParserRuleCall_13_0_0()); 
	    }
		lv_theLoad_28_0=ruleLoad		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceRule());
	        }
       		set(
       			$current, 
       			"theLoad",
        		lv_theLoad_28_0, 
        		"org.xtext.Rdsl.Load");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_29=';' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getInstanceAccess().getSemicolonKeyword_13_1());
    }
)?(	otherlv_30='state' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getInstanceAccess().getStateKeyword_14_0());
    }
	otherlv_31=':' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getInstanceAccess().getColonKeyword_14_1());
    }
(
(
(
		lv_theState_32_1=	'public' 
    {
        newLeafNode(lv_theState_32_1, grammarAccess.getInstanceAccess().getTheStatePublicKeyword_14_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed($current, "theState", lv_theState_32_1, null);
	    }

    |		lv_theState_32_2=	'private' 
    {
        newLeafNode(lv_theState_32_2, grammarAccess.getInstanceAccess().getTheStatePrivateKeyword_14_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed($current, "theState", lv_theState_32_2, null);
	    }

)

)
)	otherlv_33=';' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getInstanceAccess().getSemicolonKeyword_14_3());
    }
)?(	otherlv_34='hostname' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getInstanceAccess().getHostnameKeyword_15_0());
    }
	otherlv_35=':' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getInstanceAccess().getColonKeyword_15_1());
    }
(
(
		lv_hostname_36_0=RULE_ID
		{
			newLeafNode(lv_hostname_36_0, grammarAccess.getInstanceAccess().getHostnameIDTerminalRuleCall_15_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hostname",
        		lv_hostname_36_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
)	otherlv_37=';' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getInstanceAccess().getSemicolonKeyword_15_3());
    }
)?((	otherlv_38='tcpPort :' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getInstanceAccess().getTcpPortKeyword_16_0_0());
    }
(
(
		lv_tcp_39_0=RULE_INT
		{
			newLeafNode(lv_tcp_39_0, grammarAccess.getInstanceAccess().getTcpINTTerminalRuleCall_16_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tcp",
        		lv_tcp_39_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_40=';' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getInstanceAccess().getSemicolonKeyword_16_0_2());
    }
)
    |(	otherlv_41='udpPort :' 
    {
    	newLeafNode(otherlv_41, grammarAccess.getInstanceAccess().getUdpPortKeyword_16_1_0());
    }
(
(
		lv_udp_42_0=RULE_INT
		{
			newLeafNode(lv_udp_42_0, grammarAccess.getInstanceAccess().getUdpINTTerminalRuleCall_16_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"udp",
        		lv_udp_42_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_43=';' 
    {
    	newLeafNode(otherlv_43, grammarAccess.getInstanceAccess().getSemicolonKeyword_16_1_2());
    }
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getIptableIpTableParserRuleCall_17_0()); 
	    }
		lv_iptable_44_0=ruleIpTable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceRule());
	        }
       		add(
       			$current, 
       			"iptable",
        		lv_iptable_44_0, 
        		"org.xtext.Rdsl.IpTable");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getAttributesAttributParserRuleCall_18_0()); 
	    }
		lv_attributes_45_0=ruleAttribut		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_45_0, 
        		"org.xtext.Rdsl.Attribut");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceAccess().getInstancesInstanceParserRuleCall_19_0()); 
	    }
		lv_instances_46_0=ruleInstance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceRule());
	        }
       		add(
       			$current, 
       			"instances",
        		lv_instances_46_0, 
        		"org.xtext.Rdsl.Instance");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_47='}' 
    {
    	newLeafNode(otherlv_47, grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_20());
    }
)
;





// Entry rule entryRuleLoad
entryRuleLoad returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLoadRule()); }
	 iv_ruleLoad=ruleLoad 
	 { $current=$iv_ruleLoad.current; } 
	 EOF 
;

// Rule Load
ruleLoad returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='loadLimit' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLoadAccess().getLoadLimitKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLoadAccess().getColonKeyword_1());
    }
(
(
		lv_val_2_0=RULE_INT
		{
			newLeafNode(lv_val_2_0, grammarAccess.getLoadAccess().getValINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLoadRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_2_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))
;





// Entry rule entryRuleIpAdress
entryRuleIpAdress returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIpAdressRule()); }
	 iv_ruleIpAdress=ruleIpAdress 
	 { $current=$iv_ruleIpAdress.current; } 
	 EOF 
;

// Rule IpAdress
ruleIpAdress returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='ip4' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIpAdressAccess().getIp4Keyword_0_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIpAdressAccess().getColonKeyword_0_1());
    }
((
(
		lv_ip4_2_0=RULE_INT
		{
			newLeafNode(lv_ip4_2_0, grammarAccess.getIpAdressAccess().getIp4INTTerminalRuleCall_0_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpAdressRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"ip4",
        		lv_ip4_2_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIpAdressAccess().getFullStopKeyword_0_2_1());
    }
)*(
(
		lv_ip4last_4_0=RULE_INT
		{
			newLeafNode(lv_ip4last_4_0, grammarAccess.getIpAdressAccess().getIp4lastINTTerminalRuleCall_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpAdressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ip4last",
        		lv_ip4last_4_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))
    |(	otherlv_5='ip6' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIpAdressAccess().getIp6Keyword_1_0());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIpAdressAccess().getColonKeyword_1_1());
    }
((
(
		lv_ip6_7_0=RULE_INT
		{
			newLeafNode(lv_ip6_7_0, grammarAccess.getIpAdressAccess().getIp6INTTerminalRuleCall_1_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpAdressRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"ip6",
        		lv_ip6_7_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIpAdressAccess().getColonKeyword_1_2_1());
    }
)*(
(
		lv_ip6last_9_0=RULE_INT
		{
			newLeafNode(lv_ip6last_9_0, grammarAccess.getIpAdressAccess().getIp6lastINTTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpAdressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ip6last",
        		lv_ip6last_9_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)))
;





// Entry rule entryRuleIpTable
entryRuleIpTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIpTableRule()); }
	 iv_ruleIpTable=ruleIpTable 
	 { $current=$iv_ruleIpTable.current; } 
	 EOF 
;

// Rule IpTable
ruleIpTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='iptables' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIpTableAccess().getIptablesKeyword_0());
    }
	otherlv_1='-A' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIpTableAccess().getAKeyword_1());
    }
(
(
(
		lv_traffic_2_1=	'INPUT' 
    {
        newLeafNode(lv_traffic_2_1, grammarAccess.getIpTableAccess().getTrafficINPUTKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		setWithLastConsumed($current, "traffic", lv_traffic_2_1, null);
	    }

    |		lv_traffic_2_2=	'OUTPUT' 
    {
        newLeafNode(lv_traffic_2_2, grammarAccess.getIpTableAccess().getTrafficOUTPUTKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		setWithLastConsumed($current, "traffic", lv_traffic_2_2, null);
	    }

    |		lv_traffic_2_3=	'FORWARD' 
    {
        newLeafNode(lv_traffic_2_3, grammarAccess.getIpTableAccess().getTrafficFORWARDKeyword_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		setWithLastConsumed($current, "traffic", lv_traffic_2_3, null);
	    }

)

)
)(	otherlv_3='-s' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIpTableAccess().getSKeyword_3_0());
    }
((
(
		lv_source_4_0=RULE_INT
		{
			newLeafNode(lv_source_4_0, grammarAccess.getIpTableAccess().getSourceINTTerminalRuleCall_3_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"source",
        		lv_source_4_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIpTableAccess().getFullStopKeyword_3_1_1());
    }
)+(
(
		lv_sourcefinal_6_0=RULE_INT
		{
			newLeafNode(lv_sourcefinal_6_0, grammarAccess.getIpTableAccess().getSourcefinalINTTerminalRuleCall_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sourcefinal",
        		lv_sourcefinal_6_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))(	otherlv_7='-d' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIpTableAccess().getDKeyword_4_0());
    }
((
(
		lv_destination_8_0=RULE_INT
		{
			newLeafNode(lv_destination_8_0, grammarAccess.getIpTableAccess().getDestinationINTTerminalRuleCall_4_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"destination",
        		lv_destination_8_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_9='.' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIpTableAccess().getFullStopKeyword_4_1_1());
    }
)+(
(
		lv_destinationfinal_10_0=RULE_INT
		{
			newLeafNode(lv_destinationfinal_10_0, grammarAccess.getIpTableAccess().getDestinationfinalINTTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"destinationfinal",
        		lv_destinationfinal_10_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))(	otherlv_11='-p' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIpTableAccess().getPKeyword_5_0());
    }
(
(
(
		lv_protocol_12_1=	'tcp' 
    {
        newLeafNode(lv_protocol_12_1, grammarAccess.getIpTableAccess().getProtocolTcpKeyword_5_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		setWithLastConsumed($current, "protocol", lv_protocol_12_1, null);
	    }

    |		lv_protocol_12_2=	'udp' 
    {
        newLeafNode(lv_protocol_12_2, grammarAccess.getIpTableAccess().getProtocolUdpKeyword_5_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		setWithLastConsumed($current, "protocol", lv_protocol_12_2, null);
	    }

)

)
))	otherlv_13='-j' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getIpTableAccess().getJKeyword_6());
    }
(
(
(
		lv_target_14_1=	'ACCEPT' 
    {
        newLeafNode(lv_target_14_1, grammarAccess.getIpTableAccess().getTargetACCEPTKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		setWithLastConsumed($current, "target", lv_target_14_1, null);
	    }

    |		lv_target_14_2=	'REJECT' 
    {
        newLeafNode(lv_target_14_2, grammarAccess.getIpTableAccess().getTargetREJECTKeyword_7_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		setWithLastConsumed($current, "target", lv_target_14_2, null);
	    }

    |		lv_target_14_3=	'DROP' 
    {
        newLeafNode(lv_target_14_3, grammarAccess.getIpTableAccess().getTargetDROPKeyword_7_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIpTableRule());
	        }
       		setWithLastConsumed($current, "target", lv_target_14_3, null);
	    }

)

)
)	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIpTableAccess().getSemicolonKeyword_8());
    }
)
;





// Entry rule entryRuleAttribut
entryRuleAttribut returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributRule()); }
	 iv_ruleAttribut=ruleAttribut 
	 { $current=$iv_ruleAttribut.current; } 
	 EOF 
;

// Rule Attribut
ruleAttribut returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAttributAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.xtext.Rdsl.ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributAccess().getValeurVALParserRuleCall_2_0()); 
	    }
		lv_valeur_2_0=ruleVAL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributRule());
	        }
       		set(
       			$current, 
       			"valeur",
        		lv_valeur_2_0, 
        		"org.xtext.Rdsl.VAL");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttributAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleFullname
entryRuleFullname returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFullnameRule()); } 
	 iv_ruleFullname=ruleFullname 
	 { $current=$iv_ruleFullname.current.getText(); }  
	 EOF 
;

// Rule Fullname
ruleFullname returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFullnameAccess().getIDTerminalRuleCall_0()); 
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getFullnameAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleVAL
entryRuleVAL returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVALRule()); } 
	 iv_ruleVAL=ruleVAL 
	 { $current=$iv_ruleVAL.current.getText(); }  
	 EOF 
;

// Rule VAL
ruleVAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_BOOLEAN_0=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_0);
    }

    { 
    newLeafNode(this_BOOLEAN_0, grammarAccess.getVALAccess().getBOOLEANTerminalRuleCall_0()); 
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getVALAccess().getINTTerminalRuleCall_1()); 
    }

    |    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getVALAccess().getSTRINGTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleAType
entryRuleAType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getATypeRule()); } 
	 iv_ruleAType=ruleAType 
	 { $current=$iv_ruleAType.current.getText(); }  
	 EOF 
;

// Rule AType
ruleAType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='IPv4' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getATypeAccess().getIPv4Keyword_0()); 
    }

    |
	kw='IPv6' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getATypeAccess().getIPv6Keyword_1()); 
    }
)
    ;





RULE_BOOLEAN : ('true'|'false');

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


