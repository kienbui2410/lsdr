/*
 * generated by Xtext
 */
grammar InternalRdsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.RdslGrammarAccess;

}

@parser::members {
 
 	private RdslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(RdslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleGraph
entryRuleGraph 
:
{ before(grammarAccess.getGraphRule()); }
	 ruleGraph
{ after(grammarAccess.getGraphRule()); } 
	 EOF 
;

// Rule Graph
ruleGraph
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGraphAccess().getGroup()); }
(rule__Graph__Group__0)
{ after(grammarAccess.getGraphAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponent
entryRuleComponent 
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentAccess().getGroup()); }
(rule__Component__Group__0)
{ after(grammarAccess.getComponentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstaller
entryRuleInstaller 
:
{ before(grammarAccess.getInstallerRule()); }
	 ruleInstaller
{ after(grammarAccess.getInstallerRule()); } 
	 EOF 
;

// Rule Installer
ruleInstaller
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstallerAccess().getGroup()); }
(rule__Installer__Group__0)
{ after(grammarAccess.getInstallerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
(rule__Property__Alternatives)
{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChildren
entryRuleChildren 
:
{ before(grammarAccess.getChildrenRule()); }
	 ruleChildren
{ after(grammarAccess.getChildrenRule()); } 
	 EOF 
;

// Rule Children
ruleChildren
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChildrenAccess().getGroup()); }
(rule__Children__Group__0)
{ after(grammarAccess.getChildrenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChild
entryRuleChild 
:
{ before(grammarAccess.getChildRule()); }
	 ruleChild
{ after(grammarAccess.getChildRule()); } 
	 EOF 
;

// Rule Child
ruleChild
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChildAccess().getNameAssignment()); }
(rule__Child__NameAssignment)
{ after(grammarAccess.getChildAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExport
entryRuleExport 
:
{ before(grammarAccess.getExportRule()); }
	 ruleExport
{ after(grammarAccess.getExportRule()); } 
	 EOF 
;

// Rule Export
ruleExport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExportAccess().getGroup()); }
(rule__Export__Group__0)
{ after(grammarAccess.getExportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexportVariable
entryRuleexportVariable 
:
{ before(grammarAccess.getExportVariableRule()); }
	 ruleexportVariable
{ after(grammarAccess.getExportVariableRule()); } 
	 EOF 
;

// Rule exportVariable
ruleexportVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExportVariableAccess().getGroup()); }
(rule__ExportVariable__Group__0)
{ after(grammarAccess.getExportVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitialisation
entryRuleInitialisation 
:
{ before(grammarAccess.getInitialisationRule()); }
	 ruleInitialisation
{ after(grammarAccess.getInitialisationRule()); } 
	 EOF 
;

// Rule Initialisation
ruleInitialisation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitialisationAccess().getGroup()); }
(rule__Initialisation__Group__0)
{ after(grammarAccess.getInitialisationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImports
entryRuleImports 
:
{ before(grammarAccess.getImportsRule()); }
	 ruleImports
{ after(grammarAccess.getImportsRule()); } 
	 EOF 
;

// Rule Imports
ruleImports
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportsAccess().getGroup()); }
(rule__Imports__Group__0)
{ after(grammarAccess.getImportsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleimportVariable
entryRuleimportVariable 
:
{ before(grammarAccess.getImportVariableRule()); }
	 ruleimportVariable
{ after(grammarAccess.getImportVariableRule()); } 
	 EOF 
;

// Rule importVariable
ruleimportVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportVariableAccess().getGroup()); }
(rule__ImportVariable__Group__0)
{ after(grammarAccess.getImportVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFacet
entryRuleFacet 
:
{ before(grammarAccess.getFacetRule()); }
	 ruleFacet
{ after(grammarAccess.getFacetRule()); } 
	 EOF 
;

// Rule Facet
ruleFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFacetAccess().getGroup()); }
(rule__Facet__Group__0)
{ after(grammarAccess.getFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComment
entryRuleComment 
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAccess().getGroup()); }
(rule__Comment__Group__0)
{ after(grammarAccess.getCommentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Property__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getChildrenParserRuleCall_0()); }
	ruleChildren
{ after(grammarAccess.getPropertyAccess().getChildrenParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getExportParserRuleCall_1()); }
	ruleExport
{ after(grammarAccess.getPropertyAccess().getExportParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getImportsParserRuleCall_2()); }
	ruleImports
{ after(grammarAccess.getPropertyAccess().getImportsParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getFacetParserRuleCall_3()); }
	ruleFacet
{ after(grammarAccess.getPropertyAccess().getFacetParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Graph__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group__0__Impl
	rule__Graph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getCommentsAssignment_0()); }
(rule__Graph__CommentsAssignment_0)*
{ after(grammarAccess.getGraphAccess().getCommentsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group__1__Impl
	rule__Graph__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getImportsAssignment_1()); }
(rule__Graph__ImportsAssignment_1)*
{ after(grammarAccess.getGraphAccess().getImportsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getGraphAccess().getComponentsAssignment_2()); }
(rule__Graph__ComponentsAssignment_2)
{ after(grammarAccess.getGraphAccess().getComponentsAssignment_2()); }
)
(
{ before(grammarAccess.getGraphAccess().getComponentsAssignment_2()); }
(rule__Graph__ComponentsAssignment_2)*
{ after(grammarAccess.getGraphAccess().getComponentsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNameAssignment_1()); }
(rule__Import__NameAssignment_1)
{ after(grammarAccess.getImportAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Component__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommentsAssignment_0()); }
(rule__Component__CommentsAssignment_0)*
{ after(grammarAccess.getComponentAccess().getCommentsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameAssignment_1()); }
(rule__Component__NameAssignment_1)
{ after(grammarAccess.getComponentAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__2__Impl
	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__3__Impl
	rule__Component__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommentsAssignment_3()); }
(rule__Component__CommentsAssignment_3)*
{ after(grammarAccess.getComponentAccess().getCommentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__4__Impl
	rule__Component__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getInstallersAssignment_4()); }
(rule__Component__InstallersAssignment_4)
{ after(grammarAccess.getComponentAccess().getInstallersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__5__Impl
	rule__Component__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommentsAssignment_5()); }
(rule__Component__CommentsAssignment_5)*
{ after(grammarAccess.getComponentAccess().getCommentsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__6__Impl
	rule__Component__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getPropertiesAssignment_6()); }
(rule__Component__PropertiesAssignment_6)*
{ after(grammarAccess.getComponentAccess().getPropertiesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__7__Impl
	rule__Component__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommentsAssignment_7()); }
(rule__Component__CommentsAssignment_7)*
{ after(grammarAccess.getComponentAccess().getCommentsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__8__Impl
	rule__Component__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getGroup_8()); }
(rule__Component__Group_8__0)?
{ after(grammarAccess.getComponentAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__9__Impl
	rule__Component__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommentsAssignment_9()); }
(rule__Component__CommentsAssignment_9)*
{ after(grammarAccess.getComponentAccess().getCommentsAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Component__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_8__0__Impl
	rule__Component__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getExtendsKeyword_8_0()); }

	'extends:' 

{ after(grammarAccess.getComponentAccess().getExtendsKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_8__1__Impl
	rule__Component__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getGroup_8_1()); }
(rule__Component__Group_8_1__0)*
{ after(grammarAccess.getComponentAccess().getGroup_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getSupComponentAssignment_8_2()); }
(rule__Component__SupComponentAssignment_8_2)
{ after(grammarAccess.getComponentAccess().getSupComponentAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Component__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_8_1__0__Impl
	rule__Component__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getSupComponentsAssignment_8_1_0()); }
(rule__Component__SupComponentsAssignment_8_1_0)
{ after(grammarAccess.getComponentAccess().getSupComponentsAssignment_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group_8_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommaKeyword_8_1_1()); }

	',' 

{ after(grammarAccess.getComponentAccess().getCommaKeyword_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Installer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Installer__Group__0__Impl
	rule__Installer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Installer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstallerAccess().getInstallerKeyword_0()); }

	'installer:' 

{ after(grammarAccess.getInstallerAccess().getInstallerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Installer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Installer__Group__1__Impl
	rule__Installer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Installer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstallerAccess().getNameAssignment_1()); }
(rule__Installer__NameAssignment_1)
{ after(grammarAccess.getInstallerAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Installer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Installer__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Installer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstallerAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getInstallerAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Children__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group__0__Impl
	rule__Children__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getChildrenKeyword_0()); }

	'children:' 

{ after(grammarAccess.getChildrenAccess().getChildrenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Children__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group__1__Impl
	rule__Children__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getGroup_1()); }
(rule__Children__Group_1__0)*
{ after(grammarAccess.getChildrenAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Children__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group__2__Impl
	rule__Children__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getChildAssignment_2()); }
(rule__Children__ChildAssignment_2)
{ after(grammarAccess.getChildrenAccess().getChildAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Children__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getChildrenAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Children__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group_1__0__Impl
	rule__Children__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getChildrenAssignment_1_0()); }
(rule__Children__ChildrenAssignment_1_0)
{ after(grammarAccess.getChildrenAccess().getChildrenAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Children__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getCommaKeyword_1_1()); }

	',' 

{ after(grammarAccess.getChildrenAccess().getCommaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Export__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__0__Impl
	rule__Export__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getExportsKeyword_0()); }

	'exports:' 

{ after(grammarAccess.getExportAccess().getExportsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__1__Impl
	rule__Export__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getGroup_1()); }
(rule__Export__Group_1__0)*
{ after(grammarAccess.getExportAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__2__Impl
	rule__Export__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getExportAssignment_2()); }
(rule__Export__ExportAssignment_2)
{ after(grammarAccess.getExportAccess().getExportAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getExportAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Export__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__0__Impl
	rule__Export__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getExportsAssignment_1_0()); }
(rule__Export__ExportsAssignment_1_0)
{ after(grammarAccess.getExportAccess().getExportsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getCommaKeyword_1_1()); }

	',' 

{ after(grammarAccess.getExportAccess().getCommaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExportVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportVariable__Group__0__Impl
	rule__ExportVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportVariableAccess().getNameAssignment_0()); }
(rule__ExportVariable__NameAssignment_0)
{ after(grammarAccess.getExportVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportVariableAccess().getInitialAssignment_1()); }
(rule__ExportVariable__InitialAssignment_1)?
{ after(grammarAccess.getExportVariableAccess().getInitialAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Initialisation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initialisation__Group__0__Impl
	rule__Initialisation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getInitialisationAccess().getEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Initialisation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initialisation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getValAssignment_1()); }
(rule__Initialisation__ValAssignment_1)
{ after(grammarAccess.getInitialisationAccess().getValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Imports__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__0__Impl
	rule__Imports__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportsKeyword_0()); }

	'imports:' 

{ after(grammarAccess.getImportsAccess().getImportsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__1__Impl
	rule__Imports__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getExternalKeyword_1()); }
(
	'external' 
)?
{ after(grammarAccess.getImportsAccess().getExternalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__2__Impl
	rule__Imports__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getGroup_2()); }
(rule__Imports__Group_2__0)*
{ after(grammarAccess.getImportsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__3__Impl
	rule__Imports__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportedAssignment_3()); }
(rule__Imports__ImportedAssignment_3)
{ after(grammarAccess.getImportsAccess().getImportedAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getImportsAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Imports__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group_2__0__Impl
	rule__Imports__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportsAssignment_2_0()); }
(rule__Imports__ImportsAssignment_2_0)
{ after(grammarAccess.getImportsAccess().getImportsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getCommaKeyword_2_1()); }

	',' 

{ after(grammarAccess.getImportsAccess().getCommaKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportVariable__Group__0__Impl
	rule__ImportVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getNameAssignment_0()); }
(rule__ImportVariable__NameAssignment_0)
{ after(grammarAccess.getImportVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getOptionalKeyword_1()); }
(
	'(optional)' 
)?
{ after(grammarAccess.getImportVariableAccess().getOptionalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Facet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__0__Impl
	rule__Facet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getFacetKeyword_0()); }

	'facet' 

{ after(grammarAccess.getFacetAccess().getFacetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__1__Impl
	rule__Facet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getNameAssignment_1()); }
(rule__Facet__NameAssignment_1)
{ after(grammarAccess.getFacetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__2__Impl
	rule__Facet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getFacetAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__3__Impl
	rule__Facet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getExportFacetAssignment_3()); }
(rule__Facet__ExportFacetAssignment_3)
{ after(grammarAccess.getFacetAccess().getExportFacetAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__4__Impl
	rule__Facet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getChildrenFacetAssignment_4()); }
(rule__Facet__ChildrenFacetAssignment_4)
{ after(grammarAccess.getFacetAccess().getChildrenFacetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__5__Impl
	rule__Facet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getExtendsKeyword_5()); }

	'extends:' 

{ after(grammarAccess.getFacetAccess().getExtendsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__6__Impl
	rule__Facet__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getGroup_6()); }
(rule__Facet__Group_6__0)*
{ after(grammarAccess.getFacetAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__7__Impl
	rule__Facet__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getSupFacetAssignment_7()); }
(rule__Facet__SupFacetAssignment_7)
{ after(grammarAccess.getFacetAccess().getSupFacetAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getFacetAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Facet__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group_6__0__Impl
	rule__Facet__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getSupFacetsAssignment_6_0()); }
(rule__Facet__SupFacetsAssignment_6_0)
{ after(grammarAccess.getFacetAccess().getSupFacetsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getCommaKeyword_6_1()); }

	',' 

{ after(grammarAccess.getFacetAccess().getCommaKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group__0__Impl
	rule__Comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getNumberSignKeyword_0()); }

	'#' 

{ after(grammarAccess.getCommentAccess().getNumberSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group__1__Impl
	rule__Comment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getGroup_1()); }
(rule__Comment__Group_1__0)*
{ after(grammarAccess.getCommentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getValueAssignment_2()); }
(rule__Comment__ValueAssignment_2)
{ after(grammarAccess.getCommentAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Comment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_1__0__Impl
	rule__Comment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getValuesAssignment_1_0()); }
(rule__Comment__ValuesAssignment_1_0)
{ after(grammarAccess.getCommentAccess().getValuesAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comment__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getSpaceKeyword_1_1()); }

	' ' 

{ after(grammarAccess.getCommentAccess().getSpaceKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Graph__CommentsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getCommentsCommentParserRuleCall_0_0()); }
	ruleComment{ after(grammarAccess.getGraphAccess().getCommentsCommentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getImportsImportParserRuleCall_1_0()); }
	ruleImport{ after(grammarAccess.getGraphAccess().getImportsImportParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__ComponentsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getComponentsComponentParserRuleCall_2_0()); }
	ruleComponent{ after(grammarAccess.getGraphAccess().getComponentsComponentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CommentsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_0_0()); }
	ruleComment{ after(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CommentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_3_0()); }
	ruleComment{ after(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__InstallersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getInstallersInstallerParserRuleCall_4_0()); }
	ruleInstaller{ after(grammarAccess.getComponentAccess().getInstallersInstallerParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CommentsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_5_0()); }
	ruleComment{ after(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__PropertiesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getPropertiesPropertyParserRuleCall_6_0()); }
	ruleProperty{ after(grammarAccess.getComponentAccess().getPropertiesPropertyParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CommentsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_7_0()); }
	ruleComment{ after(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__SupComponentsAssignment_8_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getSupComponentsComponentCrossReference_8_1_0_0()); }
(
{ before(grammarAccess.getComponentAccess().getSupComponentsComponentIDTerminalRuleCall_8_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getComponentAccess().getSupComponentsComponentIDTerminalRuleCall_8_1_0_0_1()); }
)
{ after(grammarAccess.getComponentAccess().getSupComponentsComponentCrossReference_8_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__SupComponentAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getSupComponentComponentCrossReference_8_2_0()); }
(
{ before(grammarAccess.getComponentAccess().getSupComponentComponentIDTerminalRuleCall_8_2_0_1()); }
	RULE_ID{ after(grammarAccess.getComponentAccess().getSupComponentComponentIDTerminalRuleCall_8_2_0_1()); }
)
{ after(grammarAccess.getComponentAccess().getSupComponentComponentCrossReference_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__CommentsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_9_0()); }
	ruleComment{ after(grammarAccess.getComponentAccess().getCommentsCommentParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Installer__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstallerAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInstallerAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Children__ChildrenAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getChildrenChildParserRuleCall_1_0_0()); }
	ruleChild{ after(grammarAccess.getChildrenAccess().getChildrenChildParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Children__ChildAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getChildChildParserRuleCall_2_0()); }
	ruleChild{ after(grammarAccess.getChildrenAccess().getChildChildParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Child__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getChildAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__ExportsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getExportsExportVariableParserRuleCall_1_0_0()); }
	ruleexportVariable{ after(grammarAccess.getExportAccess().getExportsExportVariableParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__ExportAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getExportExportVariableParserRuleCall_2_0()); }
	ruleexportVariable{ after(grammarAccess.getExportAccess().getExportExportVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getExportVariableAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportVariable__InitialAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportVariableAccess().getInitialInitialisationParserRuleCall_1_0()); }
	ruleInitialisation{ after(grammarAccess.getExportVariableAccess().getInitialInitialisationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__ValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getValINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getInitialisationAccess().getValINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__ImportsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportsImportVariableParserRuleCall_2_0_0()); }
	ruleimportVariable{ after(grammarAccess.getImportsAccess().getImportsImportVariableParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__ImportedAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportedImportVariableParserRuleCall_3_0()); }
	ruleimportVariable{ after(grammarAccess.getImportsAccess().getImportedImportVariableParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getImportVariableAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFacetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__ExportFacetAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getExportFacetExportCrossReference_3_0()); }
(
{ before(grammarAccess.getFacetAccess().getExportFacetExportIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getFacetAccess().getExportFacetExportIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getFacetAccess().getExportFacetExportCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__ChildrenFacetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getChildrenFacetChildrenCrossReference_4_0()); }
(
{ before(grammarAccess.getFacetAccess().getChildrenFacetChildrenIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getFacetAccess().getChildrenFacetChildrenIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getFacetAccess().getChildrenFacetChildrenCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__SupFacetsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getSupFacetsFacetCrossReference_6_0_0()); }
(
{ before(grammarAccess.getFacetAccess().getSupFacetsFacetIDTerminalRuleCall_6_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFacetAccess().getSupFacetsFacetIDTerminalRuleCall_6_0_0_1()); }
)
{ after(grammarAccess.getFacetAccess().getSupFacetsFacetCrossReference_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__SupFacetAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getSupFacetFacetCrossReference_7_0()); }
(
{ before(grammarAccess.getFacetAccess().getSupFacetFacetIDTerminalRuleCall_7_0_1()); }
	RULE_ID{ after(grammarAccess.getFacetAccess().getSupFacetFacetIDTerminalRuleCall_7_0_1()); }
)
{ after(grammarAccess.getFacetAccess().getSupFacetFacetCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__ValuesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getValuesIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getCommentAccess().getValuesIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAccess().getValueIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getCommentAccess().getValueIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


