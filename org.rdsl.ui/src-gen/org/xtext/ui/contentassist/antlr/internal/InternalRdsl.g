/*
 * generated by Xtext
 */
grammar InternalRdsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.RdslGrammarAccess;

}

@parser::members {
 
 	private RdslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(RdslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGraph
entryRuleGraph 
:
{ before(grammarAccess.getGraphRule()); }
	 ruleGraph
{ after(grammarAccess.getGraphRule()); } 
	 EOF 
;

// Rule Graph
ruleGraph
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGraphAccess().getGroup()); }
(rule__Graph__Group__0)
{ after(grammarAccess.getGraphAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleComponent
entryRuleComponent 
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentAccess().getGroup()); }
(rule__Component__Group__0)
{ after(grammarAccess.getComponentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstaller
entryRuleInstaller 
:
{ before(grammarAccess.getInstallerRule()); }
	 ruleInstaller
{ after(grammarAccess.getInstallerRule()); } 
	 EOF 
;

// Rule Installer
ruleInstaller
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstallerAccess().getGroup()); }
(rule__Installer__Group__0)
{ after(grammarAccess.getInstallerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
(rule__Property__Alternatives)
{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtends
entryRuleExtends 
:
{ before(grammarAccess.getExtendsRule()); }
	 ruleExtends
{ after(grammarAccess.getExtendsRule()); } 
	 EOF 
;

// Rule Extends
ruleExtends
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendsAccess().getGroup()); }
(rule__Extends__Group__0)
{ after(grammarAccess.getExtendsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChildren
entryRuleChildren 
:
{ before(grammarAccess.getChildrenRule()); }
	 ruleChildren
{ after(grammarAccess.getChildrenRule()); } 
	 EOF 
;

// Rule Children
ruleChildren
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChildrenAccess().getGroup()); }
(rule__Children__Group__0)
{ after(grammarAccess.getChildrenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExport
entryRuleExport 
:
{ before(grammarAccess.getExportRule()); }
	 ruleExport
{ after(grammarAccess.getExportRule()); } 
	 EOF 
;

// Rule Export
ruleExport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExportAccess().getGroup()); }
(rule__Export__Group__0)
{ after(grammarAccess.getExportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexportVariable
entryRuleexportVariable 
:
{ before(grammarAccess.getExportVariableRule()); }
	 ruleexportVariable
{ after(grammarAccess.getExportVariableRule()); } 
	 EOF 
;

// Rule exportVariable
ruleexportVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExportVariableAccess().getGroup()); }
(rule__ExportVariable__Group__0)
{ after(grammarAccess.getExportVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitialisation
entryRuleInitialisation 
:
{ before(grammarAccess.getInitialisationRule()); }
	 ruleInitialisation
{ after(grammarAccess.getInitialisationRule()); } 
	 EOF 
;

// Rule Initialisation
ruleInitialisation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitialisationAccess().getGroup()); }
(rule__Initialisation__Group__0)
{ after(grammarAccess.getInitialisationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImports
entryRuleImports 
:
{ before(grammarAccess.getImportsRule()); }
	 ruleImports
{ after(grammarAccess.getImportsRule()); } 
	 EOF 
;

// Rule Imports
ruleImports
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportsAccess().getGroup()); }
(rule__Imports__Group__0)
{ after(grammarAccess.getImportsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleimportVariable
entryRuleimportVariable 
:
{ before(grammarAccess.getImportVariableRule()); }
	 ruleimportVariable
{ after(grammarAccess.getImportVariableRule()); } 
	 EOF 
;

// Rule importVariable
ruleimportVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportVariableAccess().getGroup()); }
(rule__ImportVariable__Group__0)
{ after(grammarAccess.getImportVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFacets
entryRuleFacets 
:
{ before(grammarAccess.getFacetsRule()); }
	 ruleFacets
{ after(grammarAccess.getFacetsRule()); } 
	 EOF 
;

// Rule Facets
ruleFacets
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFacetsAccess().getGroup()); }
(rule__Facets__Group__0)
{ after(grammarAccess.getFacetsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFacet
entryRuleFacet 
:
{ before(grammarAccess.getFacetRule()); }
	 ruleFacet
{ after(grammarAccess.getFacetRule()); } 
	 EOF 
;

// Rule Facet
ruleFacet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFacetAccess().getGroup()); }
(rule__Facet__Group__0)
{ after(grammarAccess.getFacetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstance
entryRuleInstance 
:
{ before(grammarAccess.getInstanceRule()); }
	 ruleInstance
{ after(grammarAccess.getInstanceRule()); } 
	 EOF 
;

// Rule Instance
ruleInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceAccess().getGroup()); }
(rule__Instance__Group__0)
{ after(grammarAccess.getInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribut
entryRuleAttribut 
:
{ before(grammarAccess.getAttributRule()); }
	 ruleAttribut
{ after(grammarAccess.getAttributRule()); } 
	 EOF 
;

// Rule Attribut
ruleAttribut
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributAccess().getGroup()); }
(rule__Attribut__Group__0)
{ after(grammarAccess.getAttributAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVAL
entryRuleVAL 
:
{ before(grammarAccess.getVALRule()); }
	 ruleVAL
{ after(grammarAccess.getVALRule()); } 
	 EOF 
;

// Rule VAL
ruleVAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVALAccess().getAlternatives()); }
(rule__VAL__Alternatives)
{ after(grammarAccess.getVALAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGraphsAssignment_0()); }
(rule__Model__GraphsAssignment_0)
{ after(grammarAccess.getModelAccess().getGraphsAssignment_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getInstancesAssignment_1()); }
(rule__Model__InstancesAssignment_1)*
{ after(grammarAccess.getModelAccess().getInstancesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getChildrenParserRuleCall_0()); }
	ruleChildren
{ after(grammarAccess.getPropertyAccess().getChildrenParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getExportParserRuleCall_1()); }
	ruleExport
{ after(grammarAccess.getPropertyAccess().getExportParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getImportsParserRuleCall_2()); }
	ruleImports
{ after(grammarAccess.getPropertyAccess().getImportsParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getFacetsParserRuleCall_3()); }
	ruleFacets
{ after(grammarAccess.getPropertyAccess().getFacetsParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getExtendsParserRuleCall_4()); }
	ruleExtends
{ after(grammarAccess.getPropertyAccess().getExtendsParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getGroup_1_0()); }
(rule__ImportVariable__Group_1_0__0)
{ after(grammarAccess.getImportVariableAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getImportVariableAccess().getNameAssignment_1_1()); }
(rule__ImportVariable__NameAssignment_1_1)
{ after(grammarAccess.getImportVariableAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__Alternatives_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getNameAssignment_1_0_2_0()); }
(rule__ImportVariable__NameAssignment_1_0_2_0)
{ after(grammarAccess.getImportVariableAccess().getNameAssignment_1_0_2_0()); }
)

    |(
{ before(grammarAccess.getImportVariableAccess().getAsteriskKeyword_1_0_2_1()); }

	'*' 

{ after(grammarAccess.getImportVariableAccess().getAsteriskKeyword_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getIDTerminalRuleCall_6_0()); }
	RULE_ID
{ after(grammarAccess.getInstanceAccess().getIDTerminalRuleCall_6_0()); }
)

    |(
{ before(grammarAccess.getInstanceAccess().getINTTerminalRuleCall_6_1()); }
	RULE_INT
{ after(grammarAccess.getInstanceAccess().getINTTerminalRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VAL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVALAccess().getBOOLEANTerminalRuleCall_0()); }
	RULE_BOOLEAN
{ after(grammarAccess.getVALAccess().getBOOLEANTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVALAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getVALAccess().getINTTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getVALAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getVALAccess().getSTRINGTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Graph__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group__0__Impl
	rule__Graph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getImportsAssignment_0()); }
(rule__Graph__ImportsAssignment_0)*
{ after(grammarAccess.getGraphAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group__1__Impl
	rule__Graph__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getGraphAccess().getComponentsAssignment_1()); }
(rule__Graph__ComponentsAssignment_1)
{ after(grammarAccess.getGraphAccess().getComponentsAssignment_1()); }
)
(
{ before(grammarAccess.getGraphAccess().getComponentsAssignment_1()); }
(rule__Graph__ComponentsAssignment_1)*
{ after(grammarAccess.getGraphAccess().getComponentsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Graph__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graph__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getFacetGraphsAssignment_2()); }
(rule__Graph__FacetGraphsAssignment_2)*
{ after(grammarAccess.getGraphAccess().getFacetGraphsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNameAssignment_1()); }
(rule__Import__NameAssignment_1)
{ after(grammarAccess.getImportAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getGraphKeyword_2()); }

	'.graph' 

{ after(grammarAccess.getImportAccess().getGraphKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Component__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__0__Impl
	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameAssignment_0()); }
(rule__Component__NameAssignment_0)
{ after(grammarAccess.getComponentAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__1__Impl
	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__2__Impl
	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getInstallersAssignment_2()); }
(rule__Component__InstallersAssignment_2)
{ after(grammarAccess.getComponentAccess().getInstallersAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__3__Impl
	rule__Component__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getPropertiesAssignment_3()); }
(rule__Component__PropertiesAssignment_3)*
{ after(grammarAccess.getComponentAccess().getPropertiesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Installer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Installer__Group__0__Impl
	rule__Installer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Installer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstallerAccess().getInstallerKeyword_0()); }

	'installer:' 

{ after(grammarAccess.getInstallerAccess().getInstallerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Installer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Installer__Group__1__Impl
	rule__Installer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Installer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstallerAccess().getNameAssignment_1()); }
(rule__Installer__NameAssignment_1)
{ after(grammarAccess.getInstallerAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Installer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Installer__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Installer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstallerAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getInstallerAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Extends__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extends__Group__0__Impl
	rule__Extends__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extends__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendsAccess().getExtendsKeyword_0()); }

	'extends:' 

{ after(grammarAccess.getExtendsAccess().getExtendsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extends__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extends__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extends__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendsAccess().getSupComponentAssignment_1()); }
(rule__Extends__SupComponentAssignment_1)
{ after(grammarAccess.getExtendsAccess().getSupComponentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Children__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group__0__Impl
	rule__Children__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getChildrenKeyword_0()); }

	'children:' 

{ after(grammarAccess.getChildrenAccess().getChildrenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Children__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group__1__Impl
	rule__Children__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getGroup_1()); }
(rule__Children__Group_1__0)*
{ after(grammarAccess.getChildrenAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Children__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group__2__Impl
	rule__Children__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getChildAssignment_2()); }
(rule__Children__ChildAssignment_2)
{ after(grammarAccess.getChildrenAccess().getChildAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Children__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getChildrenAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Children__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group_1__0__Impl
	rule__Children__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getChildrenAssignment_1_0()); }
(rule__Children__ChildrenAssignment_1_0)
{ after(grammarAccess.getChildrenAccess().getChildrenAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Children__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Children__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Children__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getCommaKeyword_1_1()); }

	',' 

{ after(grammarAccess.getChildrenAccess().getCommaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Export__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__0__Impl
	rule__Export__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getExportsKeyword_0()); }

	'exports:' 

{ after(grammarAccess.getExportAccess().getExportsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__1__Impl
	rule__Export__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getGroup_1()); }
(rule__Export__Group_1__0)*
{ after(grammarAccess.getExportAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__2__Impl
	rule__Export__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getExportAssignment_2()); }
(rule__Export__ExportAssignment_2)
{ after(grammarAccess.getExportAccess().getExportAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getExportAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Export__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__0__Impl
	rule__Export__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getExportsAssignment_1_0()); }
(rule__Export__ExportsAssignment_1_0)
{ after(grammarAccess.getExportAccess().getExportsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Export__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getCommaKeyword_1_1()); }

	',' 

{ after(grammarAccess.getExportAccess().getCommaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExportVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportVariable__Group__0__Impl
	rule__ExportVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportVariableAccess().getNameAssignment_0()); }
(rule__ExportVariable__NameAssignment_0)
{ after(grammarAccess.getExportVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExportVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExportVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportVariableAccess().getInitialAssignment_1()); }
(rule__ExportVariable__InitialAssignment_1)?
{ after(grammarAccess.getExportVariableAccess().getInitialAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Initialisation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initialisation__Group__0__Impl
	rule__Initialisation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getInitialisationAccess().getEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Initialisation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initialisation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getValAssignment_1()); }
(rule__Initialisation__ValAssignment_1)
{ after(grammarAccess.getInitialisationAccess().getValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Imports__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__0__Impl
	rule__Imports__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportsKeyword_0()); }

	'imports:' 

{ after(grammarAccess.getImportsAccess().getImportsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__1__Impl
	rule__Imports__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getGroup_1()); }
(rule__Imports__Group_1__0)*
{ after(grammarAccess.getImportsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__2__Impl
	rule__Imports__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportedAssignment_2()); }
(rule__Imports__ImportedAssignment_2)
{ after(grammarAccess.getImportsAccess().getImportedAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getImportsAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Imports__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group_1__0__Impl
	rule__Imports__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportsAssignment_1_0()); }
(rule__Imports__ImportsAssignment_1_0)
{ after(grammarAccess.getImportsAccess().getImportsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Imports__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Imports__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getCommaKeyword_1_1()); }

	',' 

{ after(grammarAccess.getImportsAccess().getCommaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportVariable__Group__0__Impl
	rule__ImportVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getExternalKeyword_0()); }
(
	'external' 
)?
{ after(grammarAccess.getImportVariableAccess().getExternalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportVariable__Group__1__Impl
	rule__ImportVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getAlternatives_1()); }
(rule__ImportVariable__Alternatives_1)
{ after(grammarAccess.getImportVariableAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getOptionalAssignment_2()); }
(rule__ImportVariable__OptionalAssignment_2)?
{ after(grammarAccess.getImportVariableAccess().getOptionalAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportVariable__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportVariable__Group_1_0__0__Impl
	rule__ImportVariable__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getImportvariableAssignment_1_0_0()); }
(rule__ImportVariable__ImportvariableAssignment_1_0_0)
{ after(grammarAccess.getImportVariableAccess().getImportvariableAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportVariable__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportVariable__Group_1_0__1__Impl
	rule__ImportVariable__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getFullStopKeyword_1_0_1()); }

	'.' 

{ after(grammarAccess.getImportVariableAccess().getFullStopKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportVariable__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportVariable__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getAlternatives_1_0_2()); }
(rule__ImportVariable__Alternatives_1_0_2)
{ after(grammarAccess.getImportVariableAccess().getAlternatives_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Facets__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group__0__Impl
	rule__Facets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getFacetsKeyword_0()); }

	'facets:' 

{ after(grammarAccess.getFacetsAccess().getFacetsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group__1__Impl
	rule__Facets__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getGroup_1()); }
(rule__Facets__Group_1__0)*
{ after(grammarAccess.getFacetsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group__2__Impl
	rule__Facets__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getFacetAssignment_2()); }
(rule__Facets__FacetAssignment_2)
{ after(grammarAccess.getFacetsAccess().getFacetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getFacetsAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Facets__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_1__0__Impl
	rule__Facets__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getFacetsAssignment_1_0()); }
(rule__Facets__FacetsAssignment_1_0)
{ after(grammarAccess.getFacetsAccess().getFacetsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facets__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facets__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getCommaKeyword_1_1()); }

	',' 

{ after(grammarAccess.getFacetsAccess().getCommaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Facet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__0__Impl
	rule__Facet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getFacetKeyword_0()); }

	'facet' 

{ after(grammarAccess.getFacetAccess().getFacetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__1__Impl
	rule__Facet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getNameAssignment_1()); }
(rule__Facet__NameAssignment_1)
{ after(grammarAccess.getFacetAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__2__Impl
	rule__Facet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getFacetAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__3__Impl
	rule__Facet__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getExportFacetAssignment_3()); }
(rule__Facet__ExportFacetAssignment_3)*
{ after(grammarAccess.getFacetAccess().getExportFacetAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__4__Impl
	rule__Facet__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getChildrenFacetAssignment_4()); }
(rule__Facet__ChildrenFacetAssignment_4)?
{ after(grammarAccess.getFacetAccess().getChildrenFacetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__5__Impl
	rule__Facet__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getGroup_5()); }
(rule__Facet__Group_5__0)?
{ after(grammarAccess.getFacetAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getFacetAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Facet__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group_5__0__Impl
	rule__Facet__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getExtendsKeyword_5_0()); }

	'extends:' 

{ after(grammarAccess.getFacetAccess().getExtendsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group_5__1__Impl
	rule__Facet__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getGroup_5_1()); }
(rule__Facet__Group_5_1__0)*
{ after(grammarAccess.getFacetAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getSupFacetAssignment_5_2()); }
(rule__Facet__SupFacetAssignment_5_2)
{ after(grammarAccess.getFacetAccess().getSupFacetAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Facet__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group_5_1__0__Impl
	rule__Facet__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getSupFacetsAssignment_5_1_0()); }
(rule__Facet__SupFacetsAssignment_5_1_0)
{ after(grammarAccess.getFacetAccess().getSupFacetsAssignment_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Facet__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Facet__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getCommaKeyword_5_1_1()); }

	',' 

{ after(grammarAccess.getFacetAccess().getCommaKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Instance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__0__Impl
	rule__Instance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getInstanceKeyword_0()); }

	'instance' 

{ after(grammarAccess.getInstanceAccess().getInstanceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__1__Impl
	rule__Instance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getOfKeyword_1()); }

	'of' 

{ after(grammarAccess.getInstanceAccess().getOfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__2__Impl
	rule__Instance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getComponentAssignment_2()); }
(rule__Instance__ComponentAssignment_2)
{ after(grammarAccess.getInstanceAccess().getComponentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__3__Impl
	rule__Instance__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__4__Impl
	rule__Instance__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNameKeyword_4()); }

	'name:' 

{ after(grammarAccess.getInstanceAccess().getNameKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__5__Impl
	rule__Instance__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNameAssignment_5()); }
(rule__Instance__NameAssignment_5)
{ after(grammarAccess.getInstanceAccess().getNameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__6__Impl
	rule__Instance__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getAlternatives_6()); }
(rule__Instance__Alternatives_6)*
{ after(grammarAccess.getInstanceAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__7__Impl
	rule__Instance__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getInstanceAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__8__Impl
	rule__Instance__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getGroup_8()); }
(rule__Instance__Group_8__0)?
{ after(grammarAccess.getInstanceAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__9__Impl
	rule__Instance__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getAttributesAssignment_9()); }
(rule__Instance__AttributesAssignment_9)*
{ after(grammarAccess.getInstanceAccess().getAttributesAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__10__Impl
	rule__Instance__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getInstancesAssignment_10()); }
(rule__Instance__InstancesAssignment_10)*
{ after(grammarAccess.getInstanceAccess().getInstancesAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_11()); }

	'}' 

{ after(grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Instance__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_8__0__Impl
	rule__Instance__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getCountKeyword_8_0()); }

	'count:' 

{ after(grammarAccess.getInstanceAccess().getCountKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_8__1__Impl
	rule__Instance__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getValAssignment_8_1()); }
(rule__Instance__ValAssignment_8_1)
{ after(grammarAccess.getInstanceAccess().getValAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getSemicolonKeyword_8_2()); }

	';' 

{ after(grammarAccess.getInstanceAccess().getSemicolonKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribut__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribut__Group__0__Impl
	rule__Attribut__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributAccess().getNameAssignment_0()); }
(rule__Attribut__NameAssignment_0)
{ after(grammarAccess.getAttributAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribut__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribut__Group__1__Impl
	rule__Attribut__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getAttributAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribut__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribut__Group__2__Impl
	rule__Attribut__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributAccess().getValeurAssignment_2()); }
(rule__Attribut__ValeurAssignment_2)
{ after(grammarAccess.getAttributAccess().getValeurAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribut__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribut__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAttributAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Model__GraphsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGraphsGraphParserRuleCall_0_0()); }
	ruleGraph{ after(grammarAccess.getModelAccess().getGraphsGraphParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__InstancesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getInstancesInstanceParserRuleCall_1_0()); }
	ruleInstance{ after(grammarAccess.getModelAccess().getInstancesInstanceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getGraphAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__ComponentsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getComponentsComponentParserRuleCall_1_0()); }
	ruleComponent{ after(grammarAccess.getGraphAccess().getComponentsComponentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Graph__FacetGraphsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraphAccess().getFacetGraphsFacetParserRuleCall_2_0()); }
	ruleFacet{ after(grammarAccess.getGraphAccess().getFacetGraphsFacetParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__InstallersAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getInstallersInstallerParserRuleCall_2_0()); }
	ruleInstaller{ after(grammarAccess.getComponentAccess().getInstallersInstallerParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__PropertiesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getPropertiesPropertyParserRuleCall_3_0()); }
	ruleProperty{ after(grammarAccess.getComponentAccess().getPropertiesPropertyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Installer__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstallerAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInstallerAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Extends__SupComponentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendsAccess().getSupComponentComponentCrossReference_1_0()); }
(
{ before(grammarAccess.getExtendsAccess().getSupComponentComponentIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getExtendsAccess().getSupComponentComponentIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getExtendsAccess().getSupComponentComponentCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Children__ChildrenAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getChildrenComponentCrossReference_1_0_0()); }
(
{ before(grammarAccess.getChildrenAccess().getChildrenComponentIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getChildrenAccess().getChildrenComponentIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getChildrenAccess().getChildrenComponentCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Children__ChildAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChildrenAccess().getChildComponentCrossReference_2_0()); }
(
{ before(grammarAccess.getChildrenAccess().getChildComponentIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getChildrenAccess().getChildComponentIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getChildrenAccess().getChildComponentCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__ExportsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getExportsExportVariableParserRuleCall_1_0_0()); }
	ruleexportVariable{ after(grammarAccess.getExportAccess().getExportsExportVariableParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Export__ExportAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportAccess().getExportExportVariableParserRuleCall_2_0()); }
	ruleexportVariable{ after(grammarAccess.getExportAccess().getExportExportVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getExportVariableAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExportVariable__InitialAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExportVariableAccess().getInitialInitialisationParserRuleCall_1_0()); }
	ruleInitialisation{ after(grammarAccess.getExportVariableAccess().getInitialInitialisationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initialisation__ValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialisationAccess().getValINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getInitialisationAccess().getValINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__ImportsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportsImportVariableParserRuleCall_1_0_0()); }
	ruleimportVariable{ after(grammarAccess.getImportsAccess().getImportsImportVariableParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__ImportedAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportsAccess().getImportedImportVariableParserRuleCall_2_0()); }
	ruleimportVariable{ after(grammarAccess.getImportsAccess().getImportedImportVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__ImportvariableAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getImportvariableCompFacetCrossReference_1_0_0_0()); }
(
{ before(grammarAccess.getImportVariableAccess().getImportvariableCompFacetIDTerminalRuleCall_1_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getImportVariableAccess().getImportvariableCompFacetIDTerminalRuleCall_1_0_0_0_1()); }
)
{ after(grammarAccess.getImportVariableAccess().getImportvariableCompFacetCrossReference_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__NameAssignment_1_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getNameIDTerminalRuleCall_1_0_2_0_0()); }
	RULE_ID{ after(grammarAccess.getImportVariableAccess().getNameIDTerminalRuleCall_1_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getNameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getImportVariableAccess().getNameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVariable__OptionalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVariableAccess().getOptionalOptionalKeyword_2_0()); }
(
{ before(grammarAccess.getImportVariableAccess().getOptionalOptionalKeyword_2_0()); }

	'(optional)' 

{ after(grammarAccess.getImportVariableAccess().getOptionalOptionalKeyword_2_0()); }
)

{ after(grammarAccess.getImportVariableAccess().getOptionalOptionalKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__FacetsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getFacetsFacetCrossReference_1_0_0()); }
(
{ before(grammarAccess.getFacetsAccess().getFacetsFacetIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFacetsAccess().getFacetsFacetIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getFacetsAccess().getFacetsFacetCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facets__FacetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetsAccess().getFacetFacetCrossReference_2_0()); }
(
{ before(grammarAccess.getFacetsAccess().getFacetFacetIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getFacetsAccess().getFacetFacetIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFacetsAccess().getFacetFacetCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFacetAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__ExportFacetAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getExportFacetExportParserRuleCall_3_0()); }
	ruleExport{ after(grammarAccess.getFacetAccess().getExportFacetExportParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__ChildrenFacetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getChildrenFacetChildrenParserRuleCall_4_0()); }
	ruleChildren{ after(grammarAccess.getFacetAccess().getChildrenFacetChildrenParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__SupFacetsAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getSupFacetsFacetCrossReference_5_1_0_0()); }
(
{ before(grammarAccess.getFacetAccess().getSupFacetsFacetIDTerminalRuleCall_5_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFacetAccess().getSupFacetsFacetIDTerminalRuleCall_5_1_0_0_1()); }
)
{ after(grammarAccess.getFacetAccess().getSupFacetsFacetCrossReference_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Facet__SupFacetAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFacetAccess().getSupFacetFacetCrossReference_5_2_0()); }
(
{ before(grammarAccess.getFacetAccess().getSupFacetFacetIDTerminalRuleCall_5_2_0_1()); }
	RULE_ID{ after(grammarAccess.getFacetAccess().getSupFacetFacetIDTerminalRuleCall_5_2_0_1()); }
)
{ after(grammarAccess.getFacetAccess().getSupFacetFacetCrossReference_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__ComponentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getComponentComponentCrossReference_2_0()); }
(
{ before(grammarAccess.getInstanceAccess().getComponentComponentIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getInstanceAccess().getComponentComponentIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getInstanceAccess().getComponentComponentCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__NameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__ValAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getValINTTerminalRuleCall_8_1_0()); }
	RULE_INT{ after(grammarAccess.getInstanceAccess().getValINTTerminalRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__AttributesAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getAttributesAttributParserRuleCall_9_0()); }
	ruleAttribut{ after(grammarAccess.getInstanceAccess().getAttributesAttributParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__InstancesAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getInstancesInstanceParserRuleCall_10_0()); }
	ruleInstance{ after(grammarAccess.getInstanceAccess().getInstancesInstanceParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAttributAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__ValeurAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributAccess().getValeurVALParserRuleCall_2_0()); }
	ruleVAL{ after(grammarAccess.getAttributAccess().getValeurVALParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BOOLEAN : ('true'|'false');

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


